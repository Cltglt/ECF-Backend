security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

        # CRUD
        - { path: "^/admin/author", roles: [ROLE_ADMIN] }
        - { path: "^/admin/book", roles: [ROLE_ADMIN] }
        - { path: "^/admin/borrower", roles: [ROLE_ADMIN] }
        - { path: "^/admin/borrowing", roles: [ROLE_ADMIN,ROLE_EMPRUNTEUR] }
        - { path: "^/admin/kind", roles: [ROLE_ADMIN] }
        - { path: "^/admin/user", roles: [ROLE_ADMIN] }

        # New
        - { path: "^/admin/author/new", roles: [ROLE_ADMIN] }
        - { path: "^/admin/book/new", roles: [ROLE_ADMIN] }
        - { path: "^/admin/borrower/new", roles: [ROLE_ADMIN] }
        - { path: "^/admin/borrowing/new", roles: [ROLE_ADMIN] }
        - { path: "^/admin/kind/new", roles: [ROLE_ADMIN] }
        - { path: "^/admin/user/new", roles: [ROLE_ADMIN] }

        # :id
        - { path: "^/admin/borrowing/[0-9]", roles: [ROLE_ADMIN,ROLE_EMPRUNTEUR] }

        # :id/Edit
        - { path: "^/admin/borrowing/[0-9]+/edit", roles: [ROLE_ADMIN] }

